//
// Copyright (c) 2018 The TurtleCoin Developers
// 
// Please see the included LICENSE file for more information.

using System;
using System.Collections.Generic;

using Canti.Blockchain.Crypto;
using Canti.Blockchain.Crypto.Keccak;
using Canti.Blockchain.Crypto.Skein;
using Canti.Blockchain.Crypto.Blake;
using Canti.Blockchain.Crypto.Groestl;
using Canti.Blockchain.Crypto.JH;
using Canti.Blockchain.Crypto.CryptoNight;
using Canti.Data;
using Canti.Utilities;

namespace TestZone
{
    partial class Program
    {
        // Test encryption
        static void TestCryptography()
        {
            // Generate a random set of bytes
            byte[] Bytes = SecureRandom.Bytes(32);

            // Write bytes to console
            Console.WriteLine($"Randomly generated bytes: {Encoding.ByteArrayToHexString(Bytes)}");

            var hashes = new Dictionary<IHashProvider, string>
            {
                { new Blake(), "Blake" },
                { new Skein(), "Skein" },
                { new Groestl(), "Groestl" },
                { new JH(), "JH" },
                { new CNV0(), "CNV0" },
                { new CNV1(), "CNV1" },
                { new CNLiteV0(), "CN Lite V0" },
                { new CNLiteV1(), "CN Lite V1" },
            };

            // Hash the bytes with each function
            foreach (var(hashFunction, hashName) in hashes.Tuples())
            {
                Hash(hashFunction, hashName, Bytes);
            }
        }

        static void Hash(IHashProvider hashFunction, string hashName, byte[] bytes)
        {
            byte[] hashed = hashFunction.Hash(bytes);

            Console.WriteLine($"{hashName}: {Encoding.ByteArrayToHexString(hashed)}");
        }
    }
}
